1. 문자열(String) 타입
   문자열(하나 이상의 문자들의 집합) "" 표기한다.
   자바 : 문자열 데이터를 저장하기 위해 String 타입을 사용한다.
   어떻게 다루느냐에 따라서 어플리케이션의 성능에 차이가 발생한다.

   메모리
   스택(stack) 영역이 아닌 객체와 같이 힙(heap)에서 문자열 데이터가 생성되고 다뤄진다.

   String 클래스의 기본적 특징
   기본적으로 자바에서 문자열(String) 객체의 값은 변경할 수 없다. (Immutable)
   String a = "hello";
   a += "java";
   라고 했을 때 a를 출력하면 hellojava가 나오겠지만 주소 번지 수 역시 변경된다.

   자바의 String 클래스는 왜 Immutable로 설계되었을까?
   - 보안적인 측면 참조값을 변경하여 어플리케이션 보안 문제가 생길 수 있으므로 불변처리함
   - 멀티 쓰레드 환경에서 동기화 문제가 발생하지 않는다.
   - JVM에서는 따로 힙메모리 영역 안에 String Constant Pool로 관리하고 있다.
   문자열을 상수화 하여 다른 변수나 다른 객체들과 공유하게 제공하고 있다.

   자바에서 String 변수 선언 방법 2가지
   - 리터럴 방식
   - new 연산자 방식

   자바에서 문자열을 다루는 자료형 String, StringBuffer, StringBuilder 3가지 자료형을 지원한다.
   위 3가지 자료형은 문자열을 다루지만, 사용목적에 따라 용도가 많이 달라진다.

   - StringBuffer, StringBuilder (기본 String 클래스의 문자열을 연산할 때 불편한점을 보완하여 제공됨.)

2. StringBuffer
   객체의 공간이 부족하면 버퍼의 크기를 유연하게 늘려서 가변적(Mutable) 이라고 한다.
   내부 Buffer(데이터를 임시적으로 저장하는 메모리)에 문자열을 저장해 두고 그 안에서 추가, 수정, 삭제 작업을 할 수 있게 설계된 클래스이다.


   문자열의 수정이 빈번한 경우 가변타입을 사용하는 것이 적합하며
   네트워크상에서 데이터를 송수신하는 경우는 보안상 불변타입을 사용하는 것이 적합하다 - ex) json type